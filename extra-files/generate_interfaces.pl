#!/usr/bin/perl
use strict;
use warnings;

# Run commands to get network interface and routing information
my $interface_info = `ip -4 addr show scope global`;
my $route_info = `ip route show default`;

# Print raw command output for debugging
print "Interface Info:\n$interface_info\n";
print "Route Info:\n$route_info\n";

# Variables to store parsed information
my ($interface, $ip_address, $cidr_netmask, $gateway);

# Parse the interface info line by line
for my $line (split /\n/, $interface_info) {
    if ($line =~ /^\d+:\s*(\w+):/) {
        # Match the interface name (e.g., ens33)
        $interface = $1;
        print "Found Interface: $interface\n";
    }
    if ($line =~ /\s*inet\s+(\d+\.\d+\.\d+\.\d+)\/(\d+)/) {
        # Match the IP address and CIDR netmask
        $ip_address = $1;
        $cidr_netmask = $2;
        print "Found IP Address: $ip_address\n";
        print "Found CIDR Netmask: $cidr_netmask\n";
    }
}

# Extract the default gateway
if ($route_info =~ /default via (\d+\.\d+\.\d+\.\d+)/) {
    $gateway = $1;
    print "Found Gateway: $gateway\n";
} else {
    print "Error: Failed to parse gateway.\n";
}

# Convert CIDR to standard netmask format if CIDR netmask was found
my $netmask;
if (defined $cidr_netmask) {
    $netmask = cidr_to_netmask($cidr_netmask);
    print "Converted Netmask: $netmask\n";
} else {
    print "Error: No CIDR netmask found.\n";
}

# Function to convert CIDR notation to netmask
sub cidr_to_netmask {
    my $bits = shift;
    my $mask = (2 ** $bits - 1) << (32 - $bits);
    return join('.', unpack("C4", pack("N", $mask)));
}

# Generate /etc/network/interfaces if all details are present
if ($interface && $ip_address && $netmask && $gateway) {
    # Prepare configuration for /etc/network/interfaces
    my $interfaces_content = <<"END";
# /etc/network/interfaces - Auto-generated by Perl script

auto $interface
iface $interface inet static
    address $ip_address
    netmask $netmask
    gateway $gateway
#Main Interface

auto vmbr0
iface vmbr0 inet static
        address 192.168.100.1/24
        bridge-ports none
        bridge-stp off
        bridge-fd 0
#Internal Network

source /etc/network/interfaces.d/*

END

    # Write to /etc/network/interfaces
    my $file = "/etc/network/interfaces";
    open(my $fh, '>', $file) or die "Could not open file '$file' $!";
    print $fh $interfaces_content;
    close $fh;

    print "Configuration file /etc/network/interfaces has been generated successfully.\n";
} else {
    print "Error: Failed to gather all necessary network information.\n";
}

